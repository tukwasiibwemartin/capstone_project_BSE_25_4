name: Deploy to Production

on:
  push:
    branches: [ "main" ]

jobs:
  prepare-database:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --no-interaction --no-progress --prefer-dist --no-scripts

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Run migrations on Production DB
        env:
          DB_CONNECTION: pgsql
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_URL: ${{ secrets.DB_URL }}
        run: php artisan migrate --force

      - name: Seed the production database (optional - usually only for first deploy)
        if: false  # Set to true for initial deployment, then false
        env:
          DB_CONNECTION: pgsql
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_URL: ${{ secrets.DB_URL }}
        run: php artisan db:seed --force

  deploy:
    needs: prepare-database
    runs-on: ubuntu-latest
    if: needs.prepare-database.result == 'success'
    environment:
      name: production
      url: https://capstoneproduction.vercel.app
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Production
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Create deployment summary
        run: |
          echo "### 🚀 Production Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 URL: https://capstoneproduction.vercel.app" >> $GITHUB_STEP_SUMMARY
          echo "📅 Deployed at: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "📦 Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
